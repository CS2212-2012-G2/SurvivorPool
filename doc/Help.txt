****Help for using git********:
Always do git fetch before working
    git fetch
If you create a new file, do git add .

If you are done working on a specific task, do
    git commit -a
This will allow you to write a message of what you changed(added)

If the fix was small(ie spelling mistake) just do
    git commit -am 'enter what you did (ie. fixed spelling mistake'

After you do a commit, or commits, do
    git push -u origin master
This syncs the github website with the content you added/changed, so everyone
else has access to it.


********Testing if git works!*******
Open up Git Bash, change directory to the place where you did a git clone.
If you type in git status, there should be some output.
Like On Branch Master or something similar.

If not, you are not in the right directory!

Now hit ls, you should see the same file as on the github page.
Try adding and editing a file.

Make a new file in notepad and type in YourName got git working!
Save it in the git folder.


Now type in git status    this should say untracked files present or something
similar.


Now type git add .   (the . needs to be there)
This adds any new file.



Now type in git commit -am "I did it" (the I did it is a commit message, you use
-am if you have a short message, or you can do -a and write out a longer
message.

Now do git push origin master    (master just is your current branch, I'll
expand on this later)

Type in your password if it asks, and there you go, you have successfully set up
git.

Remeber: Commit and push regularly, and do a git fetch before you start working.
Stuff can get messed up quickly if you don't.
Post a message on the group if you have any issues. I'm sure Kevin or Ramesh can
help.


*****Branching***********
This is really important, especially in a few weeks.

Check out this link to see what branching is:
http://learn.github.com/p/branching.html

You just have to understand what branching is, and how to do it.

Why branch?
If you are working on the default(master) branch, and someone pushes a new update to github,
you will have to pull the new update, and possibly erasing all the work you have just done or
getting a merge error. If we branch, you can have an updated master branch, and a
branch of all your hardwork separtely.


This is going how you can work on your own part of the project without worrying about if someone updated the repo.

The default branch is called master, it will have all our of WORKING code.
So when you want to start working on your part of the project, you first (! are comments):
	git fetch !update your local repo with the one in github
	git branch branchName !where branchName is something specific to what you are working on
	git checkout branchName
Now you are working on a different branch than the master. You can switch between the master and your branchName anytime by doing git checkout xxx,
where xxx is master, or a branch name.

After you are doing commiting and pulling to your new branch, do a
	git checkout master
Then do
	git merge branchName

If there is any problems with combining(merging) the code, it will alert you right away. You can fix the merge issues before pushing it up to github.



